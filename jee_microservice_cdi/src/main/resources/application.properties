
# Security
# quarkus.http.auth.basic=true

# wechseln der Implementierung von A auf B via Producer Methode und diesem Konfigurationsparameter
# at.cgs.training.produceBean=b
at.cgs.training.produceBean=b

# // if build property example interface beain one and to
at.cgsit.train.ibean=bean2
# at.cgsit.train.ibean=bean1

# AMQP configuration for the AMQP connector
at.cgsit.jeemicro.messaging.testchannel=testchannel

# Inbound
# mp.messaging.incoming.[channel-name].connector=smallrye-amqp
# mp.messaging.incoming.${at.cgsit.jeemicro.messaging.testchannel}.connector=smallrye-amqp

# mp.messaging.incoming.testchannel.connector=smallrye-amqp
# mp.messaging.incoming.testchannel.queue.name=testchannel
# mp.messaging.incoming.testchannel.exchange.name=testchannel

# Outbound
# mp.messaging.outgoing.[channel-name].connector=smallrye-amqp
# mp.messaging.outgoing.${at.cgsit.jeemicro.messaging.testchannel}.connector=smallrye-amqp
# mp.messaging.outgoing.${at.cgsit.jeemicro.messaging.testchannel}.exchange.name=testchannel

mp.messaging.outgoing.testchannel.connector=smallrye-amqp
mp.messaging.outgoing.testchannel.exchange.name=testchannel


# amqp-host=localhost
# amqp-host=amqp://localhost:5672
amqp-port=5672
# amqp-port=8161
amqp-username=artemis
amqp-password=artemis

# cdi alternatives
quarkus.arc.selected-alternatives=at.cgsit.jeemicro.cdi.alternatives.mock.*

quarkus.rest-client."at.cgsit.jeemicro.proxy.CreateInfoProxy".url=http://localhost:9000/
quarkus.rest-client."at.cgsit.jeemicro.proxy.CreateInfoProxy".scope=jakarta.inject.Singleton

# Das ist mein erstes Property
greeting.message="greeting configuration new" 

# REST, resteasy, jackson
quarkus.jackson.fail-on-unknown-properties=true

# logging configuration
quarkus.log.console.format=TEE: %d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n 
quarkus.log.console.level=INFO
quarkus.log.level=DEBUG

quarkus.log.file.enable=false
quarkus.log.file.path=quarkus-log.log
quarkus.log.file.level=DEBUG
quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n 

quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true

# datasource configuration
quarkus.datasource.db-kind = postgresql

quarkus.datasource.username = sc_admin
quarkus.datasource.password = sc_admin

# quarkus.datasource.username = postgres
# quarkus.datasource.password = vLab@MSNo1

quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/simplechat

# drop and create the database at startup (use `update` to only update the schema)

quarkus.hibernate-orm.database.generation=drop-and-create
# quarkus.hibernate-orm.database.generation=update


